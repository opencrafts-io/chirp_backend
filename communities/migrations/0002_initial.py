# Generated by Django 5.2.6 on 2025-09-29 15:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("communities", "0001_initial"),
        ("users", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Community",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "visibility",
                    models.CharField(
                        choices=[("public", "Public"), ("private", "Private")],
                        max_length=20,
                    ),
                ),
                ("private", models.BooleanField(default=False)),
                ("nsfw", models.BooleanField(default=False)),
                ("verified", models.BooleanField(default=False)),
                ("guidelines", models.JSONField(default=list)),
                ("member_count", models.PositiveIntegerField(default=0)),
                ("moderator_count", models.PositiveIntegerField(default=0)),
                ("banned_users_count", models.PositiveIntegerField(default=0)),
                ("monthly_visitor_count", models.PositiveIntegerField(default=0)),
                ("weekly_visitor_count", models.PositiveIntegerField(default=0)),
                (
                    "banner",
                    models.ImageField(
                        height_field="banner_height",
                        null=True,
                        upload_to="community/banners/",
                        width_field="banner_width",
                    ),
                ),
                ("banner_width", models.PositiveIntegerField(default=0)),
                ("banner_height", models.PositiveIntegerField(default=0)),
                (
                    "profile_picture",
                    models.ImageField(
                        height_field="profile_picture_height",
                        null=True,
                        upload_to="community/profile_pictures/",
                        width_field="profile_picture_width",
                    ),
                ),
                ("profile_picture_height", models.PositiveIntegerField(default=0)),
                ("profile_picture_width", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "creator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="community_creators",
                        to="users.user",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommunityInvite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("invitee_id", models.CharField(max_length=100)),
                ("inviter_id", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invites",
                        to="communities.community",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InviteLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_by", models.CharField(max_length=255)),
                ("created_by_name", models.CharField(max_length=255)),
                ("token", models.CharField(max_length=100, unique=True)),
                (
                    "expiration_hours",
                    models.IntegerField(
                        choices=[(72, "72 hours"), (168, "1 week")], default=72
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("is_used", models.BooleanField(default=False)),
                ("used_by", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "used_by_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("used_at", models.DateTimeField(blank=True, null=True)),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invite_links",
                        to="communities.community",
                    ),
                ),
            ],
            options={
                "db_table": "invite_links",
            },
        ),
        migrations.CreateModel(
            name="CommunityMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("super-mod", "Super Moderator"),
                            ("moderator", "Moderator"),
                            ("member", "Member"),
                        ],
                        max_length=20,
                    ),
                ),
                ("banned", models.BooleanField(default=False)),
                ("banning_reason", models.TextField(blank=True, null=True)),
                ("banned_at", models.DateTimeField(null=True)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "banned_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="banned_memberships",
                        to="users.user",
                    ),
                ),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="community_memberships",
                        to="communities.community",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="community_members",
                        to="users.user",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["community", "role"],
                        name="communities_communi_5808bc_idx",
                    ),
                    models.Index(
                        fields=["user", "role"], name="communities_user_id_e32d00_idx"
                    ),
                ],
                "unique_together": {("community", "user")},
            },
        ),
    ]
